import { NextResponse } from "next/server";
import { auth } from "@/lib/auth";
import { prisma } from "@/lib/prisma";

export async function DELETE(
  request: Request,
  { params }: { params: { id: string; brand: string } },
) {
  try {
    // Check admin authentication
    const session = await auth();
    if (!session?.user || session.user.role !== "ADMIN") {
      return NextResponse.json({ error: "Unauthorized" }, { status: 401 });
    }

    // Verify customer exists
    const customer = await prisma.customer.findUnique({
      where: { id: params.id },
    });

    if (!customer) {
      return NextResponse.json({ error: "Customer not found" }, { status: 404 });
    }

    // Find and delete the discount
    const discount = await prisma.customerDiscount.findUnique({
      where: {
        customerId_brand: {
          customerId: params.id,
          brand: decodeURIComponent(params.brand),
        },
      },
    });

    if (!discount) {
      return NextResponse.json({ error: "Discount not found" }, { status: 404 });
    }

    await prisma.customerDiscount.delete({
      where: { id: discount.id },
    });

    // Log the action
    await prisma.auditLog.create({
      data: {
        userId: session.user.id,
        action: "DELETE",
        entity: "CustomerDiscount",
        entityId: discount.id,
        details: {
          customerId: params.id,
          customerName: customer.name,
          brand: decodeURIComponent(params.brand),
        },
      },
    });

    return NextResponse.json({
      success: true,
      message: "Discount deleted successfully",
    });
  } catch (error) {
    console.error("Error deleting customer discount:", error);
    return NextResponse.json(
      {
        error: "Failed to delete customer discount",
      },
      { status: 500 },
    );
  }
}
